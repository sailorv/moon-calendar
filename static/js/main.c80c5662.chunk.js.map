{"version":3,"sources":["components/calendar/index.js","App.js","index.js"],"names":["Calendar","props","state","dateContext","moment","today","showMonthPopup","showYearPopup","weekdays","weekdaysShort","months","year","format","month","daysInMonth","currentDate","get","currentDay","firstDayOfMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","setState","onSelectChange","e","data","onMonthChange","SelectList","popup","map","key","href","onClick","className","onChangeMonth","MonthNav","showYear","showMoonPhase","calcMoonPhase","diff","calcMoonPhase2","Math","floor","calcMoonPhase3","ceil","moonPhaseName","onDayClick","day","width","style","this","blanks","i","push","console","log","d","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems","React","Component","position","margin","App","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c80c5662.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport './calendar.css';\n\nexport default class Calendar extends React.Component {\n\n  state = {\n    dateContext: moment(),\n    today: moment(),\n    showMonthPopup: false,\n    showYearPopup: false\n  }\n\n  constructor(props) {\n    super(props);\n    this.width = props.width || \"350px\";\n    this.style = props.style || {};\n    this.style.width = this.width;\n  }\n\n  weekdays = moment.weekdays();\n  weekdaysShort = moment.weekdaysShort();\n  months = moment.months();\n\n  year = () => {\n    return this.state.dateContext.format(\"Y\");\n  }\n  month = () => {\n    return this.state.dateContext.format(\"MMMM\");\n  }\n  daysInMonth = () => {\n    return this.state.dateContext.daysInMonth();\n  }\n  currentDate = () => {\n    return this.state.dateContext.get(\"date\");\n  }\n  currentDay = () => {\n    return this.state.dateContext.format(\"D\");\n  }\n  firstDayOfMonth = () => {\n    let dateContext = this.state.dateContext;\n    let firstDay = moment(dateContext).startOf(\"month\").format(\"d\"); // Day of week as number\n    return firstDay;\n  }\n\n  setMonth = (month) => {\n    let monthNo = this.months.indexOf(month);\n    let dateContext = Object.assign({}, this.state.dateContext);\n    dateContext = moment(dateContext).set(\"month\", monthNo);\n    this.setState({\n      dateContext: dateContext\n    });\n  }\n\n  onSelectChange = (e, data) => {\n    this.setMonth(data);\n    this.props.onMonthChange && this.props.onMonthChange();\n  }\n\n  SelectList = (props) => {\n    let popup = props.data.map((data) => {\n      return (\n        <div key={data}>\n          <a href=\"#\" onClick={(e)=> {this.onSelectChange(e, data)}}>\n          {data}\n          </a>\n        </div>\n      )\n    });\n    return (\n      <div className=\"month-popup\">\n        {popup}\n      </div>\n    );\n  }\n\n  onChangeMonth = (e, month) => {\n    this.setState({\n      showMonthPopup: !this.state.showMonthPopup\n    });\n  }\n\n  MonthNav = () => {\n    return (\n      <span className=\"label-month-nav\"\n        onClick={(e) => {this.onChangeMonth(e, this.month())}}>\n        {this.month()}\n        {this.state.showMonthPopup &&\n          <this.SelectList data={this.months} />\n        }\n      </span>\n    );\n  }\n\n  showYear = () => {\n    return (\n      <span className=\"year\">{this.year()}</span>\n    );\n  }\n\n  showMoonPhase = () => {\n    let thisDay = moment().format(\"YYYY-MM-DD\");\n    let lunarDays = \"29.53\";\n    let sinceFirstMoonDays = moment().diff(\"2019-12-26\", \"days\");\n    let calcMoonPhase = sinceFirstMoonDays / lunarDays;\n    let calcMoonPhase2 = calcMoonPhase - Math.floor(calcMoonPhase);\n    let calcMoonPhase3 = Math.ceil(calcMoonPhase2 * lunarDays);\n\n    if (calcMoonPhase3 <= 1){ // New Moon\n       var moonPhaseName = \"New Moon\";\n    } else if (calcMoonPhase3 > 1 && calcMoonPhase3 <= 7){  // Waxing Crescent\n       var moonPhaseName = \"Waxing Crescent\";\n    } else if (calcMoonPhase3 == 8){  // First Quarter\n       var moonPhaseName = \"First Quarter\";\n    } else if (calcMoonPhase3 <= 22 && calcMoonPhase3 >= 15){\n       var moonPhaseName = \"Waning Gibbous\";\n    } else {\n      var moonPhaseName = \"Calculating...\"\n    }\n    return (\n      <span className={moonPhaseName}>Today's moon is a {moonPhaseName} moon.</span>\n    );\n  }\n\n\n  onDayClick = (e, day) => {\n    this.props.onDayClick && this.props.onDayClick(e, day);\n  }\n\n  render() {\n    // Map the weekdays as a list\n    let weekdays = this.weekdaysShort.map((day) => {\n      return (\n        <li key={day} className=\"week-day\">{day}</li>\n      )\n    });\n\n    let blanks = [];\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push(<li key={i*80} className=\"emptySlot\">\n        {\"\"}\n        </li>\n      );\n    }\n\n    console.log(\"blanks: \", blanks);\n\n    let daysInMonth = [];\n    for (let d = 1; d <= this.daysInMonth(); d++) {\n      let className = (d == this.currentDay() ? \"day current-day\": \"day\");\n\n      daysInMonth.push(\n        <li key={d} className={className} >\n        <span>{d}</span>\n        </li>\n      );\n    }\n\n    console.log(\"days: \", daysInMonth);\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n\n    totalSlots.forEach((row, i) => {\n      if((i % 7) !== 0) {\n        cells.push(row);\n      } else {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n        cells = [];\n        cells.push(row);\n      }\n      if (i === totalSlots.length - 1) {\n        let insertRow = cells.slice();\n        rows.push(insertRow);\n      }\n    });\n\n    let trElems = rows.map((d, i) => {\n      return (\n        <div key={i*100} className=\"calendar-row\">\n          {d}\n        </div>\n      );\n    })\n\n    return (\n    <div className=\"calendar-phase-wrapper\">\n      <div className=\"calendar-container\">\n        <h2>{this.month()} {this.year()}</h2>\n        <div className=\"monthNavigation\">\n          <this.MonthNav />\n        </div>\n        <div className=\"calendar-weekdays-container\">\n          <ul className=\"calendar-weekdays\">\n            {weekdays}\n          </ul>\n        </div>\n        <div>\n          {trElems}\n        </div>\n      </div>\n      <div className=\"phase-container\">\n        <div className=\"moonPhase\">\n        <h2>Today is</h2>\n        <this.showMoonPhase />\n        </div>\n      </div>\n    </div>\n    );\n\n  }\n}\n","import React, { Component } from 'react';\n\nimport Calendar from './components/calendar/';\n\nconst style = {\n  position: \"relative\",\n  margin: \"50px auto\"\n}\n\nclass App extends Component {\n  onDayClick = (e, day) => {\n    alert(day);\n  }\n\n  render() {\n    return (\n      <div className=\"page-wrapper\">\n      <Calendar style={style}\n        onDayClick={(e, day)=> this.onDayClick(e, day)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}